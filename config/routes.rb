class AdminConstraint
  def matches?(request)
    return false unless request.session[:current_admin_id].present?

    admin = Administrator.find_by(id: request.session[:current_admin_id])
    admin.present?
  end
end

Rails.application.routes.draw do
  # Blog routes
  scope '/blog' do
    get '/', to: 'blog#index', as: :blog_index
    get '/search', to: 'blog#search', as: :blog_search
    get '/category/:slug', to: 'blog#category', as: :blog_category
    get '/tag/:slug', to: 'blog#tag', as: :blog_tag
    get '/feed', to: 'blog#feed', as: :blog_feed, defaults: { format: 'rss' }
    get '/sitemap', to: 'blog#sitemap', as: :blog_sitemap, defaults: { format: 'xml' }
    get '/:slug', to: 'blog#show', as: :blog_post
  end
  
  # Search routes
  get 'search', to: 'search#index'
  get 'search/suggestions', to: 'search#suggestions'
  
  # Theme routes
  resource :theme, only: [:show, :update] do 
    patch :reset, on: :member
  end
  
  # File upload routes
  resources :file_uploads, only: [:create, :destroy]
  
  # Chat system routes
  resources :chat_rooms, only: [:index, :show, :create] do
    resources :messages, only: [:create]
  end
  
  # Job system routes
  resources :job_requests do
    resources :job_applications, only: [:create, :show, :destroy] do
      member do
        post :start_chat
      end
    end
    member do
      patch :close
      patch :complete
    end
  end
  
  resources :job_applications, only: [:show, :update] do
    member do
      patch :accept
      patch :reject
      patch :withdraw
    end
  end
  root "home#index"
  # Authentication routes generated by authentication generator
  get  "sign_in", to: "sessions#new"
  post "sign_in", to: "sessions#create"
  delete 'sign_out', to: 'sessions#destroy', as: :sign_out
  get  "sign_up", to: "registrations#new"
  post "sign_up", to: "registrations#create"
  resource :session, only: [:new, :show] do
    get :devices, on: :member
    delete :destroy_one, on: :member
  end
  resources :registrations, only: [:new, :create]
  resource  :password, only: [:edit, :update]

  namespace :identity do
    resource :email,              only: [:edit, :update]
    resource :email_verification, only: [:show, :create]
    resource :password_reset,     only: [:new, :edit, :create, :update]
  end

  get  "/auth/failure",            to: "sessions/omniauth#failure"
  get  "/auth/:provider/callback", to: "sessions/omniauth#create"
  post "/auth/:provider/callback", to: "sessions/omniauth#create"

  resource :invitation, only: [:new, :create]

  # Profile routes
  resource :profile, only: [:show, :edit, :update], controller: 'profiles' do
    member do
      get :edit_password
      patch :update_password
    end
  end

  # Authentication routes generated end

  resources :posts
  # Do not write business logic at admin dashboard
  namespace :admin do
    resources :administrators
    get 'login', to: 'sessions#new', as: :login
    post 'login', to: 'sessions#create'
    delete 'logout', to: 'sessions#destroy', as: :logout
    resource :account, only: [:edit, :update]

    # Mount GoodJob dashboard
    mount GoodJob::Engine => 'good_job', :constraints => AdminConstraint.new

    root to: 'dashboard#index'
  end

  # ShikshaGuru routes
  resources :teachers, only: [:index, :show]
  resources :students, only: [:index, :show] 
  resources :institutes, only: [:index, :show]
  
  # write additional routes here

  mount ActionCable.server => '/cable'
end
